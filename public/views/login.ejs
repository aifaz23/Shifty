<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Log in</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <!-- Custom CSS link -->
    <link rel="stylesheet" type="text/css" href="css/login.css">

    <!-- Font Awesome link -->
    <script src="https://kit.fontawesome.com/412f6580aa.js" crossorigin="anonymous"></script>
</head>

<body>
    <div class="container">
        <div class="header">
            <h1>Log in</h1>
        </div>
        <form action="/" method="POST" class="form" id="form">
            <div class="control">
                <label for="userID">User ID</label>
                <input type="text" id="userID" name="userID" placeholder="User ID">
                <i class="fas fa-check-circle"></i>
                <i class="fas fa-exclamation-circle"></i>
                <small>Error message</small>
            </div>
            <div class="control">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" placeholder="Password">
                <i class="fas fa-check-circle"></i>
                <i class="fas fa-exclamation-circle"></i>
                <small>Error message</small>
            </div>

            <button type="submit" id="btn">Log in</button>
        </form>
    </div>

    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
        crossorigin="anonymous"></script>

    <!-- Link for using Axios to send requests -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
        const form = document.querySelector("#form");
        const username = document.querySelector("#userID");
        const password = document.querySelector("#password");

        form.addEventListener("submit", handleFormSubmit);

        username.addEventListener("input", function (event) {
            if (this.value === '') {
                setErrorFor(username, "Username can't be blank");
            } else {
                setSuccessFor(username)
            }
        });

        password.addEventListener("input", function (event) {
            if (this.value === '') {
                setErrorFor(password, "Password can't be blank");
            } else {
                setSuccessFor(password)
            }
        })

        function handleFormSubmit(event) {
            if (!checkInputs()) {
                event.preventDefault();
            } else {
                sendData(event);
            }
        }

        function sendData(e) {
            e.preventDefault();
            const usernameValue = username.value.trim();
            const passwordValue = password.value.trim();

            const data = {
                userID: usernameValue,
                password: passwordValue
            }

            axios.post('/', data)
                .then((response) => {
                    console.log(response);
                    switch (response.data.role) {
                        case "Owner": {
                            window.location = `/owner/:${response.data.id}`;
                        }
                        case "Manager": {
                            window.location = `/manager/:${response.data.id}`;
                        }
                    }
                })
                .catch((error) => {
                    form.reset();
                    checkInputs();
                    alert("User not found. Please try again!")
                })
        }

        function checkInputs() {
            // get the values from the inputs
            const usernameValue = username.value.trim();
            const passwordValue = password.value.trim();
            let success = false;

            if (usernameValue === '') {
                setErrorFor(username, "Username can't be blank");
                success = false;
            } else {
                setSuccessFor(username)
                success = true;
            }

            if (passwordValue === '') {
                setErrorFor(password, "Password can't be blank");
                success = false;
            } else {
                setSuccessFor(password);
                success = true;
            }

            return success;
        }

        function setErrorFor(input, message) {
            const control = input.parentElement;
            const small = control.querySelector("small");

            small.innerText = message;
            control.className = 'control error';
        }

        function setSuccessFor(input) {
            const control = input.parentElement;
            control.className = 'control success';
        }

        // function checkPassword(input) {
        //     const pass = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{4,14}$/;

        //     return input.match(pass);
        // }
    </script>
</body>

</html>